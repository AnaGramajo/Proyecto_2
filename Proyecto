#include <stdint.h> 
#include <LiquidCrystal_I2C.h>
#include <Servo.h> 

// Se definen los pines en los que se conectan los potenciómetros
#define P1 A1
#define P2 A2
#define P3 A3
// Se definen las variables que guardan el valor de los potenciómetros
int P_1;
int P_2;
int P_3;
// Se identifican los servos a usar
Servo S1; // Garra
Servo S2; // Medio
Servo S3; // Abajo
// Se configura la pantalla LCD
#define I2C_ADDR    0x27
#define LCD_COLUMNS 16
#define LCD_LINES   2
LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_LINES);
// identifica boton
int boton = 3; 
// estado del modo (0: EEPPROM, 1: potenciómetros)
int mode = 0;
//número máximo de posiciones para guardar
const int maxPositions = 10;

// Estructura para almacenar las posiciones de los servos
struct ServoPositions {
  int S1;
  int S2;
  int S3;
}

// Posiciones predefinidas para los servos
ServoPositions predefinedPositions[maxPositions] = {
  {90, 90, 90},
  {45, 45, 45},
  {135, 135, 135},
  {0, 0, 0},
  {180, 180, 180},
  {90, 45, 135}
}

// Guardar posicion EEPROM_1
void savePosition(int pos, ServoPositions positions) {
  int address = pos * sizeof(ServoPositions);
  EEPROM.put(address, positions);
  Serial.print("Saved position ");
  Serial.println(pos);
}

// Leer posición EEPROM_1
void readPosition (int pos){
  int address = pos*6;
  SP1 = EEPROM.write(address)
  SP2 = EEPROM.write(address + 2)
  SP3 = EEPROM.write(address + 4)

  S1.write(SP1);
  S2.write(SP2);
  S3.write(SP3);
}
// potenciometro o con EEPROM
void changeMode(){
  mode = !mode;
  if (mode == 0){
    lcd.setCursor(0,0);
    lcd.print("EEPROM");
  } else {
    lcd.print("Potenciometro");
  }
}

void setup() {
  // Se definen las entradas
  pinMode(P1,INPUT); 
  pinMode(P2,INPUT); 
  pinMode(P3,INPUT); 
  // Se define en qué pin se conecta cada servo
  S1.attach(9);
  S2.attach(10);
  S3.attach(11);
  lcd.init(); //inicia la pantalla
  lcd.backlight(); //enciende la luz
}

void loop() {
  // leer boton
  if (digitalRead(boton) == 0){
    delay(200);
    changeMode();
  }
  // Se lee el valor de los potenciómetros
  P_1 = analogRead(P1);
  P_2 = analogRead(P2);
  P_3 = analogRead(P3);
  // Se escalan para obtener valores de 0 a 180 en el servo
  P_1 = map(P_1, 0, 1023, 0, 179);
  P_2 = map(P_2, 0, 1023, 0, 179);
  P_3 = map(P_3, 0, 1023, 0, 179);
  // Se muestra el valor de P_X en la pantalla LCD. 
  lcd.setCursor(0,0); // Servo 1
  lcd.print("S1: ")+lcd.print(P_1)+lcd.print(" ");
  //lcd.setCursor(8,0); // Servo 2
  lcd.print("S2: ")+lcd.print(P_2)+lcd.print("   ");
  lcd.setCursor(0,1); // Servo 3
  lcd.print("S3: ")+lcd.print(P_3)+lcd.print("   ");
  // Se colocan los servos en la posición indicada
  S1.write(P_1);
  S2.write(P_2);
  S3.write(P_3);
  delay(100);
}
